USE [ADMIN]
GO

/****** Object:  StoredProcedure [dbo].[p_DBA_Verify_DiskSpace]    Script Date: 11/17/2021 04:43:42 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[p_DBA_Verify_DiskSpace] --

(
	@CRITICAL	int	 =20	
	,@SendMail BIT=0
	,@ToEmail varchar(500)=''
	,@DriveException1 varchar(4) = '' 
	, @DriveException2 varchar(4) = ''
	
)

AS

/*************************************************************************
Author:		SE AdminDB Experts.

Purpose:	Collect the spaceinformation about disk space on the server.

Description:  
1.	This proc uses the SQL DMVs to collect information about Disk space on the server
2.	The proc further inserts he information to send email alert to email recipients when the free space %age is less than @critical parameter.
3.	The proc gives the option to exclude the drives of hard disks on the server whcih are not be taken into account while monitoring the disk space information.



Parameters Explained:
@CRITICAL				----		It contains the value of free space on disk in percentage. If % free space is less than @critical. The proc sends an email alert.
@SendMail				----		When it is marked 1 then email needs to be sent. when it is marked 0 then email needs not to be sent.
@ToEmail				----		It contains the list of email recipients to whome the email needs to be sent.
@DriveException1		----		It is volume mount point of databases and diles present in DMV sys.master_files. The drive letter is not be taken acccount while monitoring the disk space.
@DriveException2		----		It is volume mount point of databases and diles present in DMV sys.master_files. The drive letter is not be taken acccount while monitoring the disk space.

Sample Execution parameters:	
EXEC Admin..p_DBA_Verify_DiskSpace 
@CRITICAL				=		20
,@SendMail				=		1
,@ToEmail				=		'DBA-TEST-EMAIL-LIST'
,@DriveException1		=		''
,@DriveException2		=		''

History:
1.	
2.	

**************************************************************************/
DECLARE @P_SERVERNAME VARCHAR(500)
SELECT @P_SERVERNAME = INFO_VALUE FROM TB_INFO WHERE INFO_KEY = 'SERVERNAME'



SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Begin



DECLARE 	@HOSTNAME 	VARCHAR(20), 
			@HEAD		VARCHAR(100),
			@BGCOLOR	VARCHAR(50),
			@REC		VARCHAR(50),
			@PRIORITY	VARCHAR(10),
			@FREE VARCHAR(20),
			@TOTAL VARCHAR(20),
			@FREE_PER VARCHAR(20),
			@CHART VARCHAR(2000),
			@HTML VARCHAR(MAX),
			@HTMLTEMP VARCHAR(MAX),
			@TITLE VARCHAR(100),
			@DRIVE VARCHAR(100),
			@SQL VARCHAR(MAX),
			@Profile_Name sysname



SELECT  distinct volume_mount_point as Drive, total_bytes TotalSize, available_bytes FreeSpace 
INTO #DISKSPACE
FROM sys.master_files AS f CROSS APPLY sys.dm_os_volume_stats(f.database_id, f.FILE_ID)
where volume_mount_point not in ( @DriveException1, @DriveException2 )
ORDER BY drive ASC


SET @TITLE = 'DISK SPACE ALERT : '+ @P_SERVERNAME

SET @HTML = '<HTML><TITLE>'+@TITLE+'</TITLE>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=2>
 <TR BGCOLOR=#0070C0 ALIGN=CENTER STYLE=''FONT-SIZE:8.0PT;FONT-FAMILY:"TAHOMA","SANS-SERIF";COLOR:WHITE''>
  <TD WIDTH=40><B>DRIVE</B></TD>
  <TD WIDTH=250><B>TOTAL (MB)</B></TD>
  <TD WIDTH=150><B>FREE SPACE (MB)</B></TD>
  <TD WIDTH=150><B>FREE PRECENTAGE</B></TD>
</TR>'

DECLARE	RECORDS CURSOR 
FOR SELECT CAST(DRIVE AS VARCHAR(100)) AS 'DRIVE', CAST(FREESPACE/1024/1024 AS VARCHAR(10)) AS 'FREE',CAST(TOTALSIZE/1024/1024 AS VARCHAR(10)) AS 'TOTAL', 
CONVERT(VARCHAR(2000),'<TABLE BORDER=0 ><TR><TD BORDER=0 BGCOLOR='+ CASE WHEN ((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0 < @CRITICAL  
    THEN 'RED'
WHEN ((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0 > 70  
    THEN '66CC00'
   ELSE  
    '0033FF'
   END +'><IMG SRC=''/GIFS/S.GIF'' WIDTH='+CAST(CAST(((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0*2 AS INT) AS CHAR(10) )+' HEIGHT=5></TD>
     <TD><FONT SIZE=1>'+CAST(CAST(((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0 AS INT) AS CHAR(10) )+'%</FONT></TD></TR></TABLE>') AS 'CHART' 
	FROM #DISKSPACE ORDER BY ((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0

OPEN RECORDS

FETCH NEXT FROM RECORDS INTO @DRIVE , @FREE, @TOTAL, @CHART 
		
WHILE @@FETCH_STATUS = 0

BEGIN

	SET @HTMLTEMP = 
		'<TR BORDER=0 BGCOLOR="#E8E8E8" STYLE=''FONT-SIZE:8.0PT;FONT-FAMILY:"TAHOMA","SANS-SERIF";COLOR:#0F243E''>
		<TD ALIGN = CENTER>'+@DRIVE+'</TD>
		<TD ALIGN=CENTER>'+@TOTAL+'</TD>
		<TD ALIGN=CENTER>'+@FREE+'</TD>
		<TD  VALIGN=MIDDLE>'+@CHART+'</TD>
		</TR>'
		
		SET @HTML = @HTML +	@HTMLTEMP
		
	FETCH NEXT FROM RECORDS INTO @DRIVE , @FREE, @TOTAL, @CHART 

END
CLOSE RECORDS
DEALLOCATE RECORDS


SET @HTML = @HTML + '</TABLE><BR>
<P CLASS=MSONORMAL><SPAN STYLE=''FONT-SIZE:10.0PT;''COLOR:#1F497D''><B>THANKS,</B></SPAN></P>
<P CLASS=MSONORMAL><SPAN STYLE=''FONT-SIZE:10.0PT;''COLOR:#1F497D''><B>DBA TEAM</B></SPAN></P>
</HTML>'

--PRINT 
	PRINT @HTML

--save data
DECLARE @Max_Execution_Count int

if(object_id('dbo.t_DBA_diskdrive_stats') is null)
Begin
	create table dbo.t_DBA_diskdrive_stats (  
		Drive varchar(100) ,   
		FreeSpace float null,  
		TotalSize float null,
		Free_per float,
		date_time datetime,
		Execution_Count int) 
		
SELECT top 1 @Max_Execution_Count= (ISNULL(Execution_Count,0)  + 1) FROM dbo.t_DBA_diskdrive_stats
order by date_time desc
	
insert into dbo.t_DBA_diskdrive_stats (Drive,Freespace,TotalSize,Free_Per,date_time,Execution_Count)
	select Drive,convert(float,freespace),convert(float,totalsize),
   convert(float,((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0),getdate(),@Max_Execution_Count AS Execution_Count from #DISKSPACE

End
	Else
Begin
	SELECT top 1 @Max_Execution_Count= (ISNULL(Execution_Count,0)  + 1) FROM dbo.t_DBA_diskdrive_stats
order by date_time desc

	insert into dbo.t_DBA_diskdrive_stats (Drive,Freespace,TotalSize,Free_Per,date_time,Execution_Count)
	select Drive,convert(float,freespace),convert(float,totalsize),
   convert(float,((FREESPACE/1024/1024)/((TOTALSIZE/1024/1024)*1.0))*100.0),getdate(),@Max_Execution_Count AS Execution_Count from #DISKSPACE
End	


--############################Send Mail#############################

IF EXISTS(SELECT * FROM #DISKSPACE WHERE CAST((FREESPACE/(TOTALSIZE*1.0))*100.0 AS INT) <= @CRITICAL)
	BEGIN
		IF @SendMail=1
					BEGIN
									DECLARE @p_subject AS VARCHAR(500)='<RED> Disk Space alert from SQL Server : '+@P_SERVERNAME +' ' + '('+ 'DBA Mail -'+' ' + CONVERT(VARCHAR, getdate(), 9) + ')'
									DECLARE @p_recipients VARCHAR(500)
									SELECT @p_recipients= info_value
									FROM [tb_info] 
									WHERE [Info_Key]=@ToEmail
										SELECT @p_recipients = ISNULL(@p_recipients,@ToEmail)
										SELECT @Profile_Name= info_value
										FROM [tb_info] 
										WHERE [Info_Key]= 'Current-DBA-Profile-Name'

										EXEC msdb.dbo.sp_send_dbmail
									    @Profile_name=@Profile_Name,
										@subject =@p_subject,
										@recipients = @p_recipients,
										@body = @HTML,
										@body_format ='HTML',
										@importance =  'HIGH'

					END
	END	
	ELSE
	BEGIN	
	print'All drives have adequate space'
	END

DROP TABLE #DISKSPACE


END






GO

