USE [admin]
GO
/****** Object:  StoredProcedure [dbo].[p_dba_send_email_notification]    Script Date: 01-12-2021 20:53:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER   PROCEDURE [dbo].[p_dba_send_email_notification] 
@ToEmail varchar(500),
  @subject  VARCHAR(500)
AS

/*************************************************************************
Author:		SE AdminDB Experts.

Purpose:	It sends the email notification with desired subject line to email recipients.

Description:  
1.	This proc uses sends the email notification to specific email recipients with desired subject line.
2.	The proc also throws an error when email adress in @Toemail is not valid or has incorrect syntax.


Parameters Explained:
@Subject		----		It contains the email subject line which you like to give to email notification. For example: 'Index Defrag Started'
@ToEmail		----		It contains the list of email address to whome the email needs to be sent.

Sample Execution parameters:	
EXEC Admin..p_dba_send_email_notification 
@ToEmail			=		'DBA-TEST-EMAIL-LIST'
,@Subject			=		'Index Defrag Started'
		
History:
1.	
2.	

**************************************************************************/

DECLARE @p_recipients varchar (500),@p_ToEmail varchar(500)
	SELECT @p_recipients= info_value
	FROM ADMIN..[tb_info] 
	WHERE [Info_Key]=@ToEmail

IF 	@p_recipients IS NULL
	BEGIN

		IF CHARINDEX('@',@ToEmail) = 0   
		BEGIN
		RAISERROR (N'Null value is collected for variable @recipients. 
			There are two primary reasons, either there is no corresponding email list for the value provided in the @ToEmail variable or the email address provided in the @ToEmail variable doesnot contain @ symbol in it.
		 Since this would result in email being sent to the null recipients, an error has been generated ',   16, 1 ) 
		RETURN
		END

	ELSE  
	SELECT @p_recipients = ISNULL(@p_recipients, @Toemail)

	END  

	SELECT @p_recipients  as 'recipients  '

DECLARE @p_subject  VARCHAR(500)= @@servername +' (Information Only)  -- ' + @subject + ' (DBA Mail - ' +  cast(getdate() as varchar) + ')'
Declare @Profile_Name SYSNAME
SELECT @Profile_Name= info_value FROM [tb_info] WHERE [Info_Key]= 'Current-DBA-Profile-Name'
	
	
	EXEC msdb.dbo.sp_send_dbmail
	@profile_name=@Profile_Name,
	@subject =@p_subject,
	@recipients = @p_recipients,
	@body =''

