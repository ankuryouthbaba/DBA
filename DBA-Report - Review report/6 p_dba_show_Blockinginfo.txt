USE [Admin]
GO

/****** Object:  StoredProcedure [dbo].[p_dba_show_Blockinginfo]    Script Date: 11/26/2021 9:35:58 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE   PROC [dbo].[p_dba_show_Blockinginfo] @sendMail bit =0,@ToEmail varchar(500) = ''
AS
/*******************************************************************
File Name:p_dba_show_Blockinginfo.sql
Proc Name:p_dba_show_Blockinginfo
Author   : SEAdminDBExperts
History: 

Create a new stored procedures to show Blocking information
--EXEC ADMIN..p_dba_show_Blockinginfo @sendMail ='1',@ToEmail =''
**********************************************************************/
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET NOCOUNT ON

--Try Catch Block Start here
BEGIN TRY

	--Business Logic start here
IF OBJECT_ID('tempdb..##blockingcheckfinal1', 'U') IS NOT NULL
DROP TABLE ##blockingcheckfinal1

IF OBJECT_ID('tempdb..#blockingcheck', 'U') IS NOT NULL
DROP TABLE #blockingcheck

IF OBJECT_ID('tempdb..#blockingthreshold', 'U') IS NOT NULL
DROP TABLE #blockingthreshold

CREATE TABLE #blockingcheck ([Check_ID] INT IDENTITY,[Name] VARCHAR(500),[Value] VARCHAR(100))
CREATE TABLE #blockingthreshold (name VARCHAR (30),minimum VARCHAR (10),maximum VARCHAR (10),config_value VARCHAR (10),run_value VARCHAR (10))

DECLARE @blockingname VARCHAR(50),@blockingstatus VARCHAR(10),@lastBlockingnAlert VARCHAR(35),@lastBlockingnAlertvalue VARCHAR(35),@Noofdayssincelastalert VARCHAR(60)
,@Noofdayssincelastalertvalue VARCHAR(35),@lastalertdaythreshold VARCHAR(35),@lastalertdaythresholdvalue VARCHAR(35)

---BLOCKING ENABLED
SET @blockingname='Enabled'



IF EXISTS (SELECT TOP 1 * FROM sys.configurations WHERE name ='blocked process threshold (s)' AND value_in_use>0 )
	SET @blockingstatus = 1 
		ELSE 
			SET @blockingstatus = 0
INSERT INTO #blockingcheck SELECT @blockingname,@blockingstatus

----LAST BLOCKING NALERT
SET @lastBlockingnAlert='Last Blocking Alert'
SELECT @lastBlockingnAlertvalue = MAX (Rec_CreatedDt) FROM [ADMIN].[dbo].[t_dba_Blocking_Info]


INSERT INTO #blockingcheck SELECT @lastBlockingnAlert,@lastBlockingnAlertvalue

----[Noofdayssincelastalert]
SET @Noofdayssincelastalert='No of days since last alert'
SELECT @Noofdayssincelastalertvalue = DATEDIFF (DAY, @lastBlockingnAlertvalue, CONVERT(VARCHAR(10), GETDATE(), 120))
INSERT INTO #blockingcheck SELECT @Noofdayssincelastalert,@Noofdayssincelastalertvalue

----[lastalertdaythreshold]
SET @lastalertdaythreshold='Last Alert Day Threshold'
SET @lastalertdaythresholdvalue='7'

INSERT INTO #blockingcheck SELECT @lastalertdaythreshold,@lastalertdaythresholdvalue

SELECT *
INTO #blockingcheckfinal
FROM #blockingcheck

UPDATE #blockingcheckfinal
SET [value] ='<b><font color=Red>'+ [value]+'</b></font>'
WHERE  @Noofdayssincelastalertvalue > 7 AND name= 'No of days since last alert'

IF @sendMail =0
BEGIN
	SELECT * FROM #blockingcheckfinal
	RETURN
END

--Business Logic end here

IF (@sendMail =1 ) 

BEGIN

	DECLARE @P_SERVERNAME VARCHAR(100)
	DECLARE @Profile_Name VARCHAR(100)
	DECLARE @p_subject AS VARCHAR(500)

	DECLARE @Html AS VARCHAR(5000)
	DECLARE @Html_Title AS VARCHAR(5000)
	DECLARE @Html_Blocking AS VARCHAR(5000)
	DECLARE @SQL_TEXT_Blocking AS VARCHAR(5000)

	SELECT @P_SERVERNAME = INFO_VALUE FROM admin..TB_INFO WHERE INFO_KEY = 'SERVERNAME'
	SELECT @Profile_Name= info_value FROM admin..tb_info WHERE [Info_Key]= 'Current-DBA-Profile-Name'
	SELECT @SQL_TEXT_Blocking =  'SELECT * FROM #blockingcheckfinal'
	SELECT @p_subject =  @P_SERVERNAME +' (Report) '+ 'Blocking information ' + '('+ 'DBA Mail -'+' ' + CONVERT(VARCHAR, getdate(), 9) + ')'	
	SELECT @Html_Title = '<html><p><u><strong><span style="background-color:#eeeeee;"> Blocking information </span></strong></u></p> <br> </body></html>'

	EXECUTE  dbo.p_DBA_ConvertTableToHtml @SQL_TEXT_Blocking,@Html_Blocking OUTPUT   

	SELECT @Html  = @Html_Title + @Html_Blocking 

	EXEC msdb.dbo.SP_SEND_DBMAIL
			@Profile_name   =@Profile_Name
			,@recipients	= @ToEmail 
			,@subject		= @p_subject
			,@body			= @Html
			,@body_format   = 'html'	


END
END TRY
BEGIN CATCH	
	EXEC p_dba_Call_SqlErrorlog @ObjectID = @@PROCID;
END CATCH------Try Catch Block End Here
GO

