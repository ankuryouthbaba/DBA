USE [ADMIN]
GO

/****** Object:  StoredProcedure [dbo].[p_dba_show_Collectstatinfo]    Script Date: 11/26/2021 8:36:03 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROC [dbo].[p_dba_show_Collectstatinfo]  @sendMail bit =0, @ToEmail varchar(500) = ''

,@Show_Counter BIT = 1
,@Show_Collect_IO_Stats BIT = 1
,@Collect_Wait_Stats BIT = 1
,@Show_DISK_IO_File_Stats BIT = 1
,@Show_Longrunning_Trans_Alert BIT = 0
,@Show_Blocking_alert BIT = 1
,@Show_Deadlock_alert BIT = 1

AS
/*******************************************************************
File Name:p_dba_show_Collectstatinfo_beta.sql
Proc Name:p_dba_show_Collectstatinfo_beta
Author   :
History: 

Create a new stored procedures to show Collect stat info
--EXEC ADMIN..p_dba_show_Collectstatinfo_beta @SENDMAIL='1',@TOEMAIL='OpsDBASupport@scalabilityengineers.com'
**********************************************************************/
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET NOCOUNT ON

--Try Catch Block Start here
BEGIN TRY

	--Business Logic starts here

--create synonym sn_counterdata
--for [FV-CORE-DB5].admin.dbo.counterdata

IF OBJECT_ID('tempdb..##final_temp_collectstatinfo', 'U') IS NOT NULL
DROP TABLE ##final_temp_collectstatinfo

declare @latencycountercheck varchar(10),@LatencyThreshold varchar(10)='5',@latencyCollectIODateTime varchar(50),@sent_date varchar(50), 
@longLatencyThreshold as varchar(100 ),@latencywaitstatDateTime varchar(100),@latencyDiskIOstatDateTime varchar(100)

IF OBJECT_ID('tempdb..#collectstat', 'U') IS NOT NULL
DROP TABLE #collectstat

create table #collectstat([Stats_Name]  varchar(100),[Last_Rec_Datetime] varchar(100),[Oldest_Rec_Datetime] varchar(100)
--,[Rec_Count] varchar(100)
,[Latency_Duration] varchar(100),[Latency_Threshold] varchar(100))

select TOP 1 @latencycountercheck=DATEDIFF(MI,convert(varchar(23),CounterDateTime),getdate()) from sn_counterdata order by CounterDateTime desc													
select top 1 @latencyCollectIODateTime =DATEDIFF(MI,convert(varchar(50),CollectionDateTime),getdate())from [admin].[dbo].t_dba_CollectIOstats order by RowNum desc--Table is updated by p_dba_CollectIOstatsOnly
select top 1 @latencywaitstatDateTime=DATEDIFF(MI,convert(varchar(50),date_time),getdate()) from [admin].[dbo].t_dba_collect_Wait_Stats order by Row_Number desc
select top 1 @latencyDiskIOstatDateTime=DATEDIFF(MI,convert(varchar(50),date_time),getdate()) from [admin].[dbo].[t_dba_collect_Disk_IO_FileStats] order by Row_Number desc

If @Show_Counter = 1
BEGIN
Declare @countercount as varchar(100)

;with cte as
(
select top 1 cast(left(CounterDateTime,23) as datetime) LatestCounterRecord from sn_counterdata order by CounterDateTime desc
),
cte2 as
(
select top 1 cast(left(CounterDateTime,23) as datetime) LatestCounterRecord from sn_counterdata order by CounterDateTime asc)

insert into #collectstat
select 'Counter on ' + (SELECT info_value FROM tb_info WHERE Info_Key LIKE 'Counterdata_location') ,*
,CASE WHEN @latencycountercheck > @LatencyThreshold THEN '<b><font color = Red>'+ @latencycountercheck+ ' minutes' + '</b></font>' ELSE @latencycountercheck+ ' minutes' END,@LatencyThreshold +' minutes' from CTE, CTE2
END
-----------------------------------------------------------------------------------------------------------

IF @Show_Collect_IO_Stats = 1
BEGIN
declare  @iostatrc as table (rcnt varchar(50))

Declare @iostatrcount as varchar(100)
select @iostatrcount=rcnt from @iostatrc

;with cte as
(
select top 1 CollectionDateTime LatestCounterRecord from t_dba_CollectIOstats order by 1 desc
) ,
cte2 as
(
select top 1 CollectionDateTime OldestCounterRecord from t_dba_CollectIOstats order by 1 ASC
)

insert into #collectstat
select 'Collect IO stats',*
,CASE WHEN @latencyCollectIODateTime > @LatencyThreshold THEN '<b><font color = Red>'+ @latencyCollectIODateTime+ ' minutes' + '</b></font>' ELSE @latencyCollectIODateTime+ ' minutes' END,@LatencyThreshold+' minutes' from CTE, CTE2 
END
-----------------------------------------------------------------------------------------------------------
IF @Collect_Wait_Stats = 1
BEGIN
declare  @waitstatrc as table (rcnt varchar(50))

Declare @waitstatrcount as varchar(100)
select @waitstatrcount=rcnt from @waitstatrc

;with cte as
(
select top 1 date_time LatestCounterRecord from t_dba_collect_Wait_Stats order by 1  desc
) ,
cte2 as
(
select top 1 date_time OldestCounterRecord from t_dba_collect_Wait_Stats order by 1 ASC
)

insert into #collectstat
select 'Collect Wait Stats',*
,CASE WHEN @latencywaitstatDateTime > @LatencyThreshold THEN '<b><font color = Red>'+ @latencywaitstatDateTime+ ' minutes' + '</b></font>' ELSE @latencywaitstatDateTime+ ' minutes' END,@LatencyThreshold +' minutes' from CTE, CTE2

END
-----------------------------------------------------------------------------------------------------------
IF @Show_DISK_IO_File_Stats = 1
BEGIN
declare  @iofilerc as table (rcnt varchar(50))

Declare @iofilercount as varchar(100)
select @iofilercount=rcnt from @iofilerc

;with cte as
(
select top 1 date_time LatestCounterRecord from t_dba_collect_Disk_IO_FileStats order by 1 desc
) ,
cte2 as
(
select top 1 date_time OldestCounterRecord from t_dba_collect_Disk_IO_FileStats order by 1 ASC
)
insert into #collectstat
select 'Disk IO File Stats',*
,CASE WHEN @latencyDiskIOstatDateTime > @LatencyThreshold THEN '<b><font color = Red>'+ @latencyDiskIOstatDateTime+ ' minutes' + '</b></font>' ELSE @latencyDiskIOstatDateTime+ ' minutes' END,@LatencyThreshold +' minutes' from CTE, CTE2

END
--------------------------------------------------------------------------------------------------------------------------------------
	--LONG RUNNING TRNSACTION STATS
	IF ((@Show_Longrunning_Trans_Alert = 1) AND ((SELECT COUNT(*) FROM msdb..sysmail_sentitems WHERE SUBJECT LIKE 'KPIETLAzre_Prod  (Alert) -- Long Running Transactions (DBA Mail%') > 0))
	BEGIN
	DECLARE @oldest_sent_date varchar(50), @Counterevent VARCHAR(100)
			 
	SET @longLatencyThreshold='7 '
	SELECT  @sent_date= sent_date FROM msdb.dbo.sysmail_sentitems WHERE SUBJECT LIKE 'KPIETLAzre_Prod  (Alert) -- Long Running Transactions (DBA Mail%' ORDER BY sent_date ASC
	SELECT @oldest_sent_date = sent_date FROM msdb.dbo.sysmail_sentitems WHERE SUBJECT LIKE 'KPIETLAzre_Prod (Alert) -- Long Running Transactions (DBA Mail%' ORDER BY sent_date DESC 
	SELECT @Counterevent = COUNT(*) FROM msdb.dbo.sysmail_sentitems WHERE SUBJECT LIKE 'KPIETLAzre_Prod (Alert) -- Long Running Transactions (DBA Mail%'
	INSERT INTO #collectstat
	SELECT TOP 1 'Long Running Trans Alert'--,cast(@sent_date AS VARCHAR(50) )
	,CAST(left(@sent_date,23) AS DATETIME)--cast('N/A' AS VARCHAR(50)) 
	,CAST(left(@oldest_sent_date,23) AS DATETIME)--cast(@oldest_sent_date AS VARCHAR(50)) 
	,CAST(DATEDIFF(D,@sent_date,GETDATE())AS VARCHAR (50)) +' days', CAST(@longLatencyThreshold AS VARCHAR(50))+' days'  
	END
	ELSE IF ((@Show_Longrunning_Trans_Alert = 1) AND ((SELECT COUNT(*) FROM msdb..sysmail_sentitems WHERE SUBJECT LIKE 'KPIETLAzre_Prod  (Alert) -- Long Running Transactions (DBA Mail%') = 0))
	BEGIN
	insert into #collectstat
	VALUES( 'Long Running Trans Alert','No Value','No Value','No Value','No Value')
--,CASE WHEN @latencywaitstatDateTime > @LatencyThreshold THEN '<b><font color = Red>'+ @latencywaitstatDateTime+ ' minutes' + '</b></font>' ELSE @latencywaitstatDateTime+ ' minutes' END,@LatencyThreshold +' minutes' from CTE, CTE2
	Update #collectstat
	Set [Last_Rec_Datetime] = '<b><font color = Red>' + 'No Value' + '</b></font>' WHERE [Stats_Name] = 'Long Running Trans Alert'
	Update #collectstat
	Set [Oldest_Rec_Datetime] = '<b><font color = Red>' + 'No Value' + '</b></font>' WHERE [Stats_Name] = 'Long Running Trans Alert'
	Update #collectstat
	Set [Latency_Duration] = '<b><font color = Red>' + 'No Value' + '</b></font>' WHERE [Stats_Name] = 'Long Running Trans Alert'
	Update #collectstat
	Set [Latency_Threshold] = '<b><font color = Red>' + 'No Value' + '</b></font>' WHERE [Stats_Name] = 'Long Running Trans Alert'
	END
	
	--END
	
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--BLOCKING ALERT STATS  t_dba_Blocking_Info
	IF @Show_Blocking_alert = 1
	BEGIN
	DECLARE @lastBlockingnAlertvalue VARCHAR(35), @OldestBlockingnAlertvalue VARCHAR(100), @BlockingAlertthreshold VARCHAR(10) = '30'
	
	SELECT @lastBlockingnAlertvalue = MAX (Rec_CreatedDt) FROM [ADMIN].[dbo].t_dba_Blocking_Info--[v_dba_BlockedProcessXML]
	SELECT @OldestBlockingnAlertvalue = MIN (Rec_CreatedDt) FROM [ADMIN].[dbo].t_dba_Blocking_Info--[v_dba_BlockedProcessXML]
	
	INSERT INTO #collectstat VALUES('Blocking Alert', CAST(@lastBlockingnAlertvalue AS DATETIME),CAST(@OldestBlockingnAlertvalue AS DATETIME)
	,CASE WHEN DATEDIFF(DD, @lastBlockingnAlertvalue, GETDATE()) > @BlockingAlertthreshold THEN '<b><font color = Red>' + CONVERT(VARCHAR(100),DATEDIFF(DD, @lastBlockingnAlertvalue, GETDATE())) + ' days' + '</b></font>' ELSE CONVERT(VARCHAR(100),DATEDIFF(DD, @lastBlockingnAlertvalue, GETDATE())) + ' days' END
	,@BlockingAlertthreshold + ' days')
	END
	


---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	--DEAD LOCK ALERT STATS
	IF @Show_Deadlock_alert = 1
	BEGIN
	DECLARE @Lastdeadlockdate VARCHAR(100), @Oldestdeadlockdate VARCHAR(100), @Deadlockthreshold VARCHAR(100) = '30'

	SELECT @Lastdeadlockdate  = MAX (TransactionTime) from  admin.dbo.t_dba_deadlock_Events
	SELECT @Oldestdeadlockdate  = MIN (TransactionTime) from  admin.dbo.t_dba_deadlock_Events

	INSERT INTO #collectstat VALUES('Dead Lock Alert', CAST(@Lastdeadlockdate AS DATETIME), CAST(@Oldestdeadlockdate AS DATETIME)
	,CASE WHEN DATEDIFF(DD,@Lastdeadlockdate,GETDATE()) > @Deadlockthreshold THEN '<b><font color = Red>' +CONVERT(VARCHAR(100), DATEDIFF(DD,@Lastdeadlockdate,GETDATE())) + ' days' + '</b></font>' ELSE CONVERT(VARCHAR(100), DATEDIFF(DD,@Lastdeadlockdate,GETDATE())) + ' days' END
	,@Deadlockthreshold + ' days')
	END


---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#finaltempcollectstat', 'U') IS NOT NULL 	DROP TABLE #finaltempcollectstat
	
	CREATE TABLE #finaltempcollectstat ([Stats_Name]  varchar(100),[Last_Rec_Datetime] varchar(100),[Oldest_Rec_Datetime] varchar(100),[Latency_Duration] varchar(100),[Latency_Threshold] varchar(100))
	
	INSERT INTO #finaltempcollectstat SELECT * FROM #collectstat
	--SELECT * INTO #finaltempcollectstat FROM #collectstat

	--UPDATE #finaltempcollectstat set [Latency_Duration] = '<b><font color=Red>'+ [Latency_Duration]+'</b></font>' where [Latency_Duration] > @LatencyThreshold and [Stats_Name] not like 'Long Running Trans Alert'

	--SELECT * into ##final_temp_collectstatinfo FROM #finaltempcollectstat
	Select * from #finaltempcollectstat
	--Business Logic end here
	END TRY
	BEGIN CATCH	
		EXEC p_dba_Call_SqlErrorlog @ObjectID = @@PROCID;
	END CATCH------Try Catch Block End Here

	IF (@sendMail =0 AND @ToEmail <>'')
		BEGIN
			RAISERROR('If we need to send email , we must keep the value of the parameter @sendemail as 1...', 16, 1)WITH NOWAIT;
			RETURN
		END

	IF (@sendMail =1 ) 

	BEGIN

	IF (@sendMail =1 AND @ToEmail ='')
		BEGIN
			RAISERROR('If the value of the parameter @sendemail is 1, we need to specify email address in the @ToEmail parameter 
						else keep the @sendemail=0 and ToEmail=NULL or blank..', 16, 1)WITH NOWAIT;
		RETURN
		END

		DECLARE @P_SERVERNAME VARCHAR(100)
		DECLARE @Profile_Name VARCHAR(100)
		DECLARE @p_subject AS VARCHAR(500)

		DECLARE @Html AS VARCHAR(5000)
		DECLARE @Html_Title AS VARCHAR(5000)
		DECLARE @Html_collectTable AS VARCHAR(5000)
		DECLARE @SQL_TEXT_collect AS VARCHAR(5000)

		SELECT @P_SERVERNAME = INFO_VALUE FROM admin..TB_INFO WHERE INFO_KEY = 'SERVERNAME'
		SELECT @Profile_Name= info_value FROM admin..[tb_info] WHERE [Info_Key]= 'Current-DBA-Profile-Name'
		SELECT @SQL_TEXT_collect =  'SELECT * FROM ##finaltempcollectstat'
		SELECT @p_subject =  @P_SERVERNAME +' (Report) '+ '-- Collect stats Information' + '('+ 'DBA Mail -'+' ' + CONVERT(VARCHAR, getdate(), 9) + ')'	
		SELECT @Html_Title = '<html><p><u><strong><span style="background-color:#eeeeee;"> Collect stats Information </span></strong></u></p> <br> </body></html>'

		EXECUTE  dbo.p_DBA_ConvertTableToHtml @SQL_TEXT_collect,@Html_collectTable OUTPUT   

		SELECT @Html  = @Html_Title + @Html_collectTable

		EXEC msdb.dbo.SP_SEND_DBMAIL
				@Profile_name=@Profile_Name
				,@recipients	= @ToEmail 
				,@subject		= @p_subject
				,@body		= @Html
				,@body_format = 'html'	


	END
GO

