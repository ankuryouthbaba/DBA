USE [Admin]
GO

/****** Object:  StoredProcedure [dbo].[p_dba_show_Large_tables]    Script Date: 11/26/2021 9:44:02 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE   PROC [dbo].[p_dba_show_Large_tables]  @sendMail bit =0, @ToEmail varchar(500) = '',@TopRows INT=10 
AS
/*******************************************************************
File Name:p_dba_show_Large_tables.sql
Proc Name:p_dba_show_Large_tables
Author:
History: 

Create a new stored procedures to show large tables related info
**********************************************************************/
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET NOCOUNT ON

--Try Catch Block Start here
--BEGIN TRY

	--Business Logic start here
IF OBJECT_ID('tempdb..#tempsize', 'U') IS NOT NULL DROP TABLE #tempsize
IF OBJECT_ID('tempdb..#tempsizefinal', 'U') IS NOT NULL DROP TABLE #tempsizefinal

CREATE TABLE #tempsize ( Table_Name VARCHAR(500), Index_Name  VARCHAR(500),ObjectID VARCHAR(MAX),
IndexID VARCHAR(MAX), PartitionID VARCHAR(MAX), Row_count VARCHAR(200))
INSERT INTO #tempsize
SELECT --Top 10
t.NAME AS TableName,
    i.name as indexName,i.[Object_ID],i.index_id,p.partition_id,
    sum(p.rows) as RowCounts
  --into #tempsize
FROM 
    sys.tables t
INNER JOIN       
    sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN
	sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
WHERE i.index_id <= 1 
GROUP BY t.name, i.[object_id], i.index_id,i.name, p.partition_id
ORDER BY RowCounts DESC

CREATE TABLE #tempsizefinal (Table_Name VARCHAR(500), TotalSpace_MB INT, Row_Count VARCHAR(200))
INSERT INTO #tempsizefinal
SELECT TOP 10 t.Table_Name,
    (sum(a.total_pages) * 8) / 1024 as TotalSpaceMB,
	 --t.RowCounts
	 SUBSTRING(CONVERT(VARCHAR, CAST(t.Row_Count AS money), 1),1, LEN(CONVERT(varchar, CAST(t.Row_Count AS money), 1))-3) as RowCounts
 FROM #tempsize t
 LEFT JOIN sys.allocation_units a ON t.PartitionID = a.container_id
 GROUP BY t.Table_Name,t.Index_Name, t.[objectID], t.indexID,t.partitionID,t.Row_Count
 ORDER BY TotalSpaceMB DESC
SELECT * FROM #tempsizefinal
--END TRY
--BEGIN CATCH	
--	EXEC p_dba_Call_SqlErrorlog @ObjectID = @@PROCID;
--END CATCH------Try Catch Block End Here

IF (@sendMail =0 AND @ToEmail <>'')
	BEGIN
		RAISERROR('If we need to send email , we must keep the value of the parameter @sendemail as 1...', 16, 1)WITH NOWAIT;
		RETURN
	END

IF (@sendMail =1 ) 
BEGIN

IF (@sendMail =1 AND @ToEmail ='')
	BEGIN
		RAISERROR('If the value of the parameter @sendemail is 1, we need to specify email address in the @ToEmail parameter 
					else keep the @sendemail=0 and ToEmail=NULL or blank..', 16, 1)WITH NOWAIT;
	RETURN
	END

	DECLARE @P_SERVERNAME VARCHAR(100)
	DECLARE @Profile_Name VARCHAR(100)
	DECLARE @p_subject AS VARCHAR(500)

	DECLARE @Html AS VARCHAR(5000)
	DECLARE @Html_Title AS VARCHAR(5000)
	DECLARE @Html_LargeTable AS VARCHAR(5000)
	DECLARE @SQL_TEXT_large AS VARCHAR(5000)

	SELECT @P_SERVERNAME = INFO_VALUE FROM TB_INFO WHERE INFO_KEY = 'SERVERNAME'
	SELECT @Profile_Name= info_value FROM [tb_info] WHERE [Info_Key]= 'Current-DBA-Profile-Name'
	SELECT @SQL_TEXT_large =  'SELECT * FROM #tempsizefinal'
	SELECT @p_subject =  @P_SERVERNAME +' (Report) '+ '-- Large Tables Information' + '('+ 'DBA Mail -'+' ' + CONVERT(VARCHAR, getdate(), 9) + ')'	
	SELECT @Html_Title = '<html><p><u><strong><span style="background-color:#eeeeee;"> Tables Information </span></strong></u></p> <br> </body></html>'

	EXECUTE  dbo.p_DBA_ConvertTableToHtml @SQL_TEXT_large,@Html_LargeTable OUTPUT   

	SELECT @Html  = @Html_Title + @Html_LargeTable
	
	SET @Html = REPLACE(@Html,'&lt;','<')
	SET @Html = REPLACE(@Html,'&gt;','>')

	EXEC msdb.dbo.SP_SEND_DBMAIL
			@Profile_name=@Profile_Name
			,@recipients	= @ToEmail 
			,@subject		= @p_subject
			,@body		= @Html
			,@body_format = 'html'	


END
GO

